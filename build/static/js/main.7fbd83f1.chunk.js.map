{"version":3,"sources":["HomePage.jsx","SharePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["HomePage","useState","data","setData","likeImages","setLikeImages","value","setValue","active","setActive","toggleActive","useCallback","handleChange","newValue","getData","a","axios","get","nasaData","console","log","collection","toastMarkup","Toast","content","onDismiss","description","date_created","TextContainer","useEffect","localStorage","getItem","parseLocalData","JSON","parse","map","x","link","Page","fullWidth","divider","title","Layout","Section","oneHalf","TextField","onChange","Button","style","marginTop","onClick","items","imgData","transformData","description_508","links","find","render","href","MediaCard","primaryAction","isClick","indexOf","image","filter","setItem","stringify","getAndSetLikeImagesinLocal","onAction","popoverActions","navigator","clipboard","writeText","window","location","origin","copySharebaleLink","nasa_id","size","alt","width","height","objectFit","objectPosition","src","Frame","Loading","SharePage","params","useParams","id","App","exact","path","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","AppProvider","i18n","enTranslations","document","querySelector"],"mappings":"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","file":"static/js/main.7fbd83f1.chunk.js","sourcesContent":["import React, {useState, useCallback, useEffect} from 'react';\r\nimport Heart from \"react-animated-heart\";\r\nimport '@shopify/polaris/dist/styles.css'\r\nimport './App.css'\r\nimport {\r\n  Layout,\r\n  Page,\r\n  Button,\r\n  TextField,\r\n  MediaCard,\r\n  Frame, Loading, TextContainer, Toast\r\n} from '@shopify/polaris';\r\nimport axios from 'axios';\r\n\r\nexport default function HomePage() {\r\n  const [data, setData] = useState({});\r\n  const [likeImages , setLikeImages] = useState([]);\r\n  const [value, setValue] = useState('Stars');\r\n  const [active, setActive] = useState(false);\r\n  const toggleActive = useCallback(() => setActive((active) => !active), []);\r\n\r\n  const handleChange = useCallback((newValue) => setValue(newValue), []);\r\n  const getData = async () => {\r\n    const nasaData = await axios.get(`https://images-api.nasa.gov/search?q=${value}&media_type=image`);\r\n    console.log(nasaData)\r\n    setData(nasaData?.data?.collection)\r\n  }\r\n\r\n  const toastMarkup = active ? (\r\n    <Toast content=\"Link Copided\" onDismiss={toggleActive} />\r\n  ) : null;\r\n\r\n  const description = ({description , date_created}) => {\r\n    return <TextContainer>\r\n      <p>{description}</p>\r\n      <p><b>Date Created: </b>{date_created}</p>\r\n    </TextContainer>\r\n  }\r\n\r\n  const getAndSetLikeImagesinLocal = (image) => {\r\n    if(localStorage.getItem(\"URLS\")){\r\n      let parseLocalData = JSON.parse(localStorage.getItem(\"URLS\"));\r\n      let findIdx = parseLocalData?.find(x => x.link == image.link)\r\n      if(findIdx){\r\n          parseLocalData = parseLocalData?.filter(x => x.link !== image.link)\r\n          parseLocalData = [...parseLocalData];\r\n      }else {\r\n        parseLocalData = [...parseLocalData , image];\r\n      }\r\n      localStorage.setItem(\"URLS\" , JSON.stringify(parseLocalData));\r\n      setLikeImages(parseLocalData.map(x => x.link))\r\n    }else {\r\n      setLikeImages([image.link])\r\n      localStorage.setItem(\"URLS\" , JSON.stringify([image]));\r\n    }\r\n\r\n  }\r\n\r\n  const copySharebaleLink = (value) => {\r\n    navigator.clipboard.writeText(window.location.origin + \"/shareable/\" + value);\r\n  }\r\n  useEffect(() => {\r\n    getData();\r\n    if(localStorage.getItem(\"URLS\")){\r\n      let parseLocalData = JSON.parse(localStorage.getItem(\"URLS\"));\r\n      setLikeImages(parseLocalData.map(x => x.link))\r\n    }\r\n  }, []);\r\n  return <div>\r\n    <Page fullWidth divider title=\"Nasa App\">\r\n    <Layout>\r\n      <Layout.Section oneHalf>\r\n        <TextField  value={value} onChange={handleChange} />\r\n      </Layout.Section>\r\n      <Layout.Section oneHalf>\r\n        <Button style={{marginTop: \"20px\"}} onClick={getData}>Search</Button>\r\n      </Layout.Section>\r\n      <Layout.Section>\r\n      </Layout.Section>\r\n    </Layout>\r\n    {/* <NavBar /> */}\r\n      {data?.items ? <Layout>\r\n      {data?.items?.map(imgData => {\r\n        let transformData = {\r\n          title : imgData?.data[0].title,\r\n          description : imgData?.data[0]?.description_508 || imgData?.data[0]?.description,\r\n          link: imgData?.links?.find(x => x.render === \"image\")?.href,\r\n          data : imgData.data[0],\r\n          date_created : imgData?.data[0].date_created\r\n        };\r\n        console.log(transformData)\r\n        return <Layout.Section>\r\n            <MediaCard title={transformData.title} primaryAction={{\r\n              content: <Heart isClick={likeImages.indexOf(transformData.link) !== -1} onClick={() => getAndSetLikeImagesinLocal(transformData)} />,\r\n              onAction: () => {}\r\n            }} description={description(transformData)} popoverActions={[{ content: 'Copy Shareable Link', onAction: () => { copySharebaleLink(transformData?.data?.nasa_id); toggleActive()} }]} size=\"large\">\r\n              <img alt=\"\" width=\"100%\" height=\"100%\" style={{\r\n                objectFit: 'cover',\r\n                objectPosition: 'center'\r\n              }} src={transformData.link} />\r\n            </MediaCard>\r\n        </Layout.Section>\r\n      })}\r\n      <Frame>\r\n      {toastMarkup}\r\n      </Frame>\r\n      </Layout> : <div style={{height: '100px'}}>\r\n  <Frame>\r\n    <Loading />\r\n  </Frame>\r\n</div>}\r\n      \r\n  </Page>\r\n  </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Layout,\r\n    Page,\r\n    MediaCard,\r\n    TextContainer\r\n  } from '@shopify/polaris';\r\nimport axios from 'axios';\r\nimport { useParams } from \"react-router\";\r\n\r\n\r\nexport default function SharePage(){\r\n    const params = useParams();\r\n    const [data, setData] = useState({});\r\n\r\n    const getData = async (value) => {\r\n        const nasaData = await axios.get(`https://images-api.nasa.gov/search?nasa_id=${value}`);\r\n        console.log(nasaData)\r\n        setData(nasaData?.data?.collection)\r\n    }\r\n    const description = ({description , date_created}) => {\r\n        return <TextContainer>\r\n          <p>{description}</p>\r\n          <p><b>Date Created: </b>{date_created}</p>\r\n        </TextContainer>\r\n      } \r\n    console.log(params)\r\n    useEffect(() => {\r\n        if(params?.id){\r\n            getData(params.id)\r\n        }\r\n    }, [])\r\n    return <Page>\r\n        <Layout>\r\n      {data?.items?.map(imgData => {\r\n        let transformData = {\r\n          title : imgData?.data[0].title,\r\n          description : imgData?.data[0]?.description_508 || imgData?.data[0]?.description,\r\n          link: imgData?.links?.find(x => x.render === \"image\")?.href,\r\n          data : imgData.data[0],\r\n          date_created : imgData?.data[0].date_created\r\n        };\r\n        console.log(transformData)\r\n        return <Layout.Section>\r\n            <MediaCard title={transformData.title} description={description(transformData)} size=\"large\">\r\n              <img alt=\"\" width=\"100%\" height=\"100%\" style={{\r\n                objectFit: 'cover',\r\n                objectPosition: 'center'\r\n              }} src={transformData.link} />\r\n            </MediaCard>\r\n        </Layout.Section>\r\n      })}\r\n      </Layout>\r\n    </Page>\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport HomePage from \"./HomePage\";\nimport SharePage from \"./SharePage\";\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/shareable/:id\">\n            <SharePage />\n          </Route>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route render={() => <Redirect to=\"/\" />} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport enTranslations from '@shopify/polaris/locales/en.json';\nimport {AppProvider, Page, Card, Button} from '@shopify/polaris';\nReactDOM.render(\n  <AppProvider i18n={enTranslations}>\n    <App />\n  </AppProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}